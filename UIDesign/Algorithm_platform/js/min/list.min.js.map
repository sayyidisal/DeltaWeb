{"version":3,"sources":["list.js"],"names":["contains","a","obj","i","length","name","angular","module","directive","restrict","templateUrl","controller","$scope","links","home","other","login","$http","questions","title","desc","author","author_url","tags","link","abs","url","show","activeFilter","initLoading","$","window","scroll","scrollTop","offset","top","height","push","$apply","filter","tag","pageList","prev","next","jQuery","document","ready","tooltip","popover","trigger","html","animation","on","_this","this","setTimeout"],"mappings":"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","file":"list.min.js","sourcesContent":["(function() {\n\n\tangular.module('platform-list', [])\n\n\t.directive('navBar', [function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: \"nav.html\",\n\t\t\t// controlerAs:\"nav\", \n\t\t\tcontroller: ['$scope', function($scope) {\n\t\t\t\t//pass links throught json\n\t\t\t\t$scope.links = {\n\t\t\t\t\thome: \"index.html\",\n\t\t\t\t\tother: \"other.html\",\n\t\t\t\t\tlogin: \"login.html\",\n\t\t\t\t}\n\t\t\t}],\n\t\t};\n\t}])\n\n\t.controller('ListCtrl', ['$http', '$scope', function($http, $scope) {\n\t\t// get initial questions\n\t\t// $scope.questions=[];\n\t\t// $scope.tags=[];\n\t\t// $http.get('/init_questions.json').success(function(data) {\n\t\t// \t$scope.questions=data.questions; \n\t\t// \t$scope.questions=data.tags; \n\t\t// \t$scope.$apply();\n\t\t// })\n\n\t\t$scope.questions = [{\n\t\t\ttitle: \"How to test a class that has private methods, fields or inner classes\",\n\t\t\tdesc: \"How do I use JUnit to test a class that has internal private methods, fields or nested classes? It seems bad to change the access modifier for a method just to be able to run a test.\",\n\t\t\tauthor: \"Tacher A\",\n\t\t\tauthor_url: \"\",\n\t\t\ttags: [{\n\t\t\t\tname: \"CS\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"Java\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"JDD\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}],\n\t\t\turl: \"question.html\",\n\t\t\tshow: true,\n\t\t}, {\n\t\t\ttitle: \"JavaScript unit test tools for TDD\",\n\t\t\tdesc: \"I've looked into and considered many JavaScript unit tests and testing tools, but have been unable to find a suitable option to remain fully TDD compliant. So, is there a JavaScript unit test tool that is fully TDD compliant?\",\n\t\t\tauthor: \"Tacher B\",\n\t\t\tauthor_url: \"\",\n\t\t\ttags: [{\n\t\t\t\tname: \"CS\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"JavaScript\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"JDD\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}],\n\t\t\turl: \"question.html\",\n\t\t\tshow: true,\n\t\t}, {\n\t\t\ttitle: \"What is Unit test, Integration Test, Smoke test, Regression Test?\",\n\t\t\tdesc: \"What is Unit test, Integration Test, Smoke test, Regression Test and what are the differences between them? And Which tools can I use for each of them? For example I use JUnit and NUnit for Unit testing and Integration Testing. Are there any Smoke Test or Regression Test tools?\",\n\t\t\tauthor: \"Teacher C\",\n\t\t\tauthor_url: \"\",\n\t\t\ttags: [{\n\t\t\t\tname: \"Ma\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"Java\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"JDD\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}],\n\t\t\turl: \"question.html\",\n\t\t\tshow: true,\n\t\t}, {\n\t\t\ttitle: \"How can I test if an array contains a certain value?\",\n\t\t\tdesc: \"I have a String[] with values like so: public static final String[] VALUES = new String[] {\\\"AB\\\",\\\"BC\\\",\\\"CD\\\",\\\"AE\\\"}; Given String s, is there a good way of testing whether VALUES contains s?\",\n\t\t\tauthor: \"Teacher D\",\n\t\t\tauthor_url: \"\",\n\t\t\ttags: [{\n\t\t\t\tname: \"Ma\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"Java\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"JDD\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}],\n\t\t\turl: \"question.html\",\n\t\t\tshow: true,\n\t\t}, {\n\t\t\ttitle: \"How do I test if a string is empty in Objective C?\",\n\t\t\tdesc: \"How do I test if an NSString is empty in Objective C?\",\n\t\t\tauthor: \"Teacher E\",\n\t\t\tauthor_url: \"\",\n\t\t\ttags: [{\n\t\t\t\tname: \"Ma\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"Ios\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}, {\n\t\t\t\tname: \"JDD\",\n\t\t\t\tlink: \"tag.html\",\n\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t}],\n\t\t\turl: \"question.html\",\n\t\t\tshow: true,\n\t\t}];\n\n\t\t// example of tags\n\n\t\t$scope.tags = [{\n\t\t\tname: \"CS\",\n\t\t\tlink: \"tag.html\",\n\t\t\tabs: \"CS abstract goes here...\"\n\t\t}, {\n\t\t\tname: \"Ma\",\n\t\t\tlink: \"tag.html\",\n\t\t\tabs: \"Ma abstract goes here...\"\n\t\t}, {\n\t\t\tname: \"Java\",\n\t\t\tlink: \"tag.html\",\n\t\t\tabs: \"Java abstract goes here...\"\n\t\t}];\n\n\t\t$scope.activeFilter = \"\";\n\n\t\t$scope.initLoading = function() {\n\t\t\t$(function() {\n\t\t\t\t$(window).scroll(function() {\n\t\t\t\t\tif ($(window).scrollTop() > (30 + $('#loading').offset().top - $(window).height())) {\n\n\t\t\t\t\t\t// ajax to load more questions\n\t\t\t\t\t\t// $http.get('/question.json').success(function(data) {\n\t\t\t\t\t\t//  for (var i = data.tags.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t// \t\t$scope.tags.push(data.tags[i]);\n\t\t\t\t\t\t// \t};\n\t\t\t\t\t\t//  for (var i = data.questions.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t// \t\t$scope.questions.push(data.questions[i]);\n\t\t\t\t\t\t// \t};\n\t\t\t\t\t\t// \tif (data.tags.length==0) {\n\t\t\t\t\t\t// \t\t$('#loading').remove();\n\t\t\t\t\t\t//\t};\n\t\t\t\t\t\t// \t$scope.$apply();\n\t\t\t\t\t\t// })\n\n\t\t\t\t\t\t//for demo purpose only (a sample question)\n\t\t\t\t\t\t$scope.questions.push({\n\t\t\t\t\t\t\ttitle: \"How do I test if a string is empty in Objective C?\",\n\t\t\t\t\t\t\tdesc: \"How do I test if an NSString is empty in Objective C?\",\n\t\t\t\t\t\t\tauthor: \"Teacher E\",\n\t\t\t\t\t\t\tauthor_url: \"\",\n\t\t\t\t\t\t\ttags: [{\n\t\t\t\t\t\t\t\tname: \"Ma\",\n\t\t\t\t\t\t\t\tlink: \"tag.html\",\n\t\t\t\t\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tname: \"Java\",\n\t\t\t\t\t\t\t\tlink: \"tag.html\",\n\t\t\t\t\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tname: \"JDD\",\n\t\t\t\t\t\t\t\tlink: \"tag.html\",\n\t\t\t\t\t\t\t\tabs: \"abstract goes here...\"\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\turl: \"\",\n\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$scope.tags.push({name:\"new\",link:\"tag.html\",abs:\"abstract\"});\n\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t// end of demo\n\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\t$scope.initLoading();\n\n\t\t$scope.filter = function(tag) {\n\t\t\t$scope.activeFilter = tag;\n\t\t\tfor (var i = 0; i < $scope.questions.length; i++) {\n\t\t\t\t$scope.questions[i].show = true;\n\t\t\t\tif (!contains($scope.questions[i].tags, tag) && tag != \"\") {\n\t\t\t\t\t$scope.questions[i].show = false;\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t}])\n\n\t.controller('PaginationCtrl', ['$scope', function($scope) {\n\t\t$scope.pageList = [\"/ulr1\", \"/url2\", \"/url3\", \"/url4\", \"/url5\"];\n\t\t$scope.prev = \"/urlPrev\";\n\t\t$scope.next = \"/urlNext\";\n\t}])\n\n})()\n\njQuery(document).ready(function($) {\n\t$('[data-toggle=\"tooltip\"]').tooltip();\n\t$(\".label\").popover({\n\t\t\ttrigger: \"manual\",\n\t\t\thtml: true,\n\t\t\tanimation: false\n\t\t})\n\t\t.on(\"mouseenter\", function() {\n\t\t\tvar _this = this;\n\t\t\t$(this).popover(\"show\");\n\t\t\t$(\".popover\").on(\"mouseleave\", function() {\n\t\t\t\t$(_this).popover('hide');\n\t\t\t});\n\t\t}).on(\"mouseleave\", function() {\n\t\t\tvar _this = this;\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (!$(\".popover:hover\").length) {\n\t\t\t\t\t$(_this).popover(\"hide\");\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n});\n\nfunction contains(a, obj) {\n\tvar i = a.length;\n\twhile (i--) {\n\t\tif (a[i].name === obj) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}"],"sourceRoot":"/source/"}