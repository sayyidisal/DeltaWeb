function vizJSAV(e,a){jsonContent=a,container=$("#"+e),av=new JSAV(document.getElementById(e))}var jsonContent={},glbFlags={u:0,n:1,c:2},indexColor="rgb(255, 163, 163)",nColor="rgb(217, 255, 178)",cColor="rgb(255, 255, 162)",bColor="red",edgeColor="rgb(255, 102, 255)",matrixHeaderColor="rgb(152,152,152)",uColor="white",graphColor={RED:"rgb(217, 137, 137)",BLUE:"rgb(138, 138, 230)",GRAY:"rgb(204, 204, 204)",WHITE:"rgb(255, 255, 255)",YELLOW:"rgb(255, 255, 153)",GREEN:"rgb(162, 243, 162)",BLACK:"rgb(0, 0, 0)"},DATATYPES=["Dict","DisjointSet","Array","Stack","Queue","LinkedList","BinaryMinHeap","BinaryMaxHeap","MinPriorityQueue","MaxPriorityQueue","Tree","BinarySearchTree","AVLTree","RBTree","Graph","DiGraph","StringMatrix","int","str","bool","float","NoneType"],av,current_content,current_line,currentStat,container,divDepthList=[],avDepthDict={};vizJSAV.prototype.animate=function(e){var a="statement_"+e;if(currentStat=a,current_content=jsonContent[a].current_content,current_line=jsonContent[a].current_line,a in jsonContent){for(var r=jsonContent[a].vars,t=Object.keys(r).length,n=0;t>n;n++){var i=$("<div id='layer"+(n+1)+"' class='graphlayer'><span>Data structures: </span></div>");container.append(i);var s=new JSAV(i);avDepthDict["depth_"+(n+1)]=s,divDepthList[n]=i}var o=container.width();padding=10,singleLayerWidth=(o-2*padding*t)/t,$(".graphlayer").css("width",singleLayerWidth),$(".graphlayer").css("padding-left",padding),$(".graphlayer").css("padding-right",padding);for(var l in r)for(var h=r[l],p=0;p<h.length;p++){var d=h[p];if(null!=d){d.name;av=avDepthDict[l],this.plotVar(d,l)}}}},vizJSAV.prototype.plotVar=function(e,a){var r,t,n=e.type,i=e.name,s=e.value;switch(n){case"int":case"str":case"bool":case"float":case"NoneType":var o=n+"("+i.trim()+"): "+s;r=av.code(o,{lineNumbers:!1}),r.addClass("primitive");break;case"Dict":t=av.label(e.name),r=this.parseDict(e),r.addClass("Dict");break;case"DisjointSet":t=av.label(e.name),r=this.parseDisjointSet(e),r.addClass("DisjointSet");break;case"Array":t=av.label(e.name),r=this.parseList(e,{}),r.addClass("Array");break;case"Stack":t=av.label(e.name),r=this.parseList(e,{layout:"vertical",indexed:!0}),r.addClass("Stack");break;case"Queue":t=av.label(e.name),r=this.parseList(e,{indexed:!0}),r.addClass("Queue");break;case"LinkedList":t=av.label(e.name),r=this.parseLinkedList(e),r.addClass("LinkedList");break;case"BinaryMinHeap":case"BinaryMaxHeap":t=av.label(e.name),r=this.parseHeap(e),r.addClass("BinaryHeap");break;case"MinPriorityQueue":case"MaxPriorityQueue":t=av.label(e.name),r=this.parseHeap(e),r.addClass("PriorityQueue");break;case"Tree":t=av.label(e.name),r=this.parseTree(e),r.addClass("Tree");break;case"BinarySearchTree":t=av.label(e.name),r=this.parseBTree(e,"BinarySearchTree"),r.addClass("BinarySearchTree");break;case"AVLTree":t=av.label(e.name),r=this.parseBTree(e,"AVLTree"),r.addClass("AVLTree");break;case"RBTree":t=av.label(e.name),r=this.parseBTree(e,"RBTree"),r.addClass("RBTree");break;case"Graph":t=av.label(e.name),r=this.parseGraph(e,{layout:"layered"}),r.addClass("Graph");break;case"DiGraph":t=av.label(e.name),r=this.parseGraph(e,{directed:!0,layout:"layered"}),r.addClass("DiGraph");break;case"Matrix":t=av.label(e.name),r=this.parseMatrix(e),r.addClass("Matrix");break;case"StringMatrix":t=av.label(e.name),r=this.parseStringMatrix(e),r.addClass("StringMatrix");break;case"None":}},vizJSAV.prototype.parseDict=function(e){var a=e.value,r=(a.length,new Array),t=new Array("Key"),n=new Array("Val");for(var i in a)t.push(i),n.push(a[i]);r.push(t),r.push(n);var s=av.ds.matrix(r);return s.mouseenter(s.highlight).mouseleave(s.unhighlight),s},vizJSAV.prototype.parseDisjointSet=function(e){var a=av.ds.tree(),r=e.value,t={},n=a.root();n.hide({recursive:!1});for(var i in r){var s=r[i];if(!(i in t)){var o=a.newNode(i);t[i]=o}if(!(s in t)){var o=a.newNode(s);t[s]=o}i==s?(n.addChild(t[i]),t[i].edgeToParent().hide()):t[s].addChild(t[i])}return a.layout(),a.mouseenter(function(){this.highlight()}).mouseleave(function(){this.unhighlight()}),a},vizJSAV.prototype.parseList=function(e,a){var r=e.value,t=av.ds.array(r,a);return t.mouseenter(t.highlight).mouseleave(t.unhighlight),t},vizJSAV.prototype.parseLinkedList=function(e){for(var a=e.value,r=(e.name,av.ds.list()),t=0;t<a.length;t++)r.addLast(a[t]);return r.layout(),r.mouseenter(function(){this.highlight()}).mouseleave(function(){this.unhighlight()}),r},vizJSAV.prototype.parseHeap=function(e){for(var a=av.ds.binarytree(),r=e.value,t=[],n=0;n<r.length;n++){var i=a.newNode(r[n]);if(t.push(i),0==n)a.root(i);else{var s=parseInt((n-1)/2);n%2==0?t[s].right(i):t[s].left(i)}}return a.mouseenter(function(){this.highlight()}).mouseleave(function(){this.unhighlight()}),a.layout(),a},vizJSAV.prototype.parseTree=function(e){for(var a=av.ds.tree(),r=e.value,t=[],n=[],i=0;i<r.length;i++)switch(r[i]){case"[":t.push("["),i++;for(var s="";"["!=r[i]&&"]"!=r[i]&&i<r.length;)s+=r[i],i+=1;i--;var o=a.newNode(s.trim());n.push(o);break;case"]":t.pop();var l=n.pop();if(0==n.length)a.root(l);else{var h=n[n.length-1];h.addChild(l)}}return a.mouseenter(function(){this.highlight()}).mouseleave(function(){this.unhighlight()}),a.layout(),a},vizJSAV.prototype.parseBTree=function(e,a){var r,t=av.ds.binarytree(),n=e.value,i=e.color;"RBTree"==a&&(r=i.replace(/\[/g," ").replace(/\]/g," ").match(/\S+/g));for(var s,o,l=[],h=[],p="",d=n,u=0,c=0;c<d.length;c++)switch(d[c]){case"[":l.push(d[c]);break;case"]":if(l.pop(),0==l.length)s=h.pop(),t.root(s);else{if(s=h.pop(),null==s)continue;o=h.length-1,parseInt(s.value())<parseInt(h[o].value())?h[o].left(s):h[o].right(s)}break;default:for(;"["!=d[c]&&"]"!=d[c]&&c<d.length;)p+=d[c],c+=1;p=p.trim().replace(/\'/g,"").replace(/\"/g,""),"None"!=p?(s=t.newNode(p),"RBTree"==a&&("R"==r[u]?s.css({"background-color":graphColor.RED}):"B"==r[u]&&s.css({color:"white","background-color":"BLACK"})),h.push(s)):h.push(null),u++,p="",c-=1}return t.layout(),t},vizJSAV.prototype.parseGraph=function(e,a){for(var r=e.V,t=e.E,n=av.ds.graph(a),i={},s=0;s<r.length;s++){var o=r[s].value,l=r[s].color.toUpperCase(),h=n.addNode(o);h.css({"background-color":graphColor[l]}),i[o]=h}for(var s=0;s<t.length;s++){var p=t[s].start,d=t[s].end,l=t[s].color,u=t[s].weight;n.addEdge(i[p],i[d],{weight:u,stroke:l})}return n.layout(),n},vizJSAV.prototype.parseMatrix=function(e){var a=(e.name,e.value),r=av.ds.matrix(a,{style:"matrix"});return r.layout(),r},vizJSAV.prototype.parseStringMatrix=function(e){var a=e.value,r=e.edges,t=$.extend(!0,{},e.topheader),n=$.extend(!0,{},e.leftheader),i=$.map(t,function(e,a){return[e]}),s=$.map(n,function(e,a){return[e]}),o=0!=i.length||0!=s.length,l=$.extend(!0,{},a),h=$.map(l,function(e,a){return[e]});if(o){for(var p=i.length;p<h[0].length;p++)i.splice(0,0,"");for(var p=s.length;p<h.length;p++)s.splice(0,0,"");h.splice(0,0,i),h[0].splice(0,0,"");for(var p=1;p<h.length;p++)h[p].splice(0,0,s[p-1])}var d=av.ds.matrix(h,{style:"plain"});if(o){for(var p=1;p<h[0].length;p++)d.css(0,p,{"background-color":matrixHeaderColor});for(var p=1;p<h.length;p++)d.css(p,0,{"background-color":matrixHeaderColor})}for(var p=0;p<r.length;p++){var u=parseInt(r[p][0]),c=parseInt(r[p][1]),v=parseInt(r[p][2]),g=parseInt(r[p][3]),y={};o&&(u++,c++,v++,g++),d.addEdge(u,c,v,g,y)}return d.layout(),d};
//# sourceMappingURL=vizJSAV-v2.min.js.map
