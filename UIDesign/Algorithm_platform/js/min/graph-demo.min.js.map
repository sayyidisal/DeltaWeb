{"version":3,"sources":["graph-demo.js"],"names":["bin2String","array","String","fromCharCode","apply","reformat","data","res","ANSWER","body","BODY","startIndex","indexOf","endIndex","graph","JSON","parse","substring","new_body","GRAPH","graphDataSet","statement_1","console","current_content","current_line","vars","depth_1","eleFlags","b","c","d","e","index","name","pointer","pointerIndex","type","value","varFlag","statement_10","elements","isEmpty","length","top","statement_11","childrenNo","height","size","statement_12","left","nodeFlag","parent","right","statement_13","balanceFactor","statement_14","color","nodeColor","statement_15","E","end","start","weight","V","adjs","edge_count","edges","vertex_count","vertices","statement_16","statement_17","leftheader","ncols","nrows","topheader","statement_2","A","G","K","M","O","P","Q","U","W","statement_3","statement_4","statement_5","statement_6","head","statement_7","statement_8","statement_9","angular","module","directive","restrict","templateUrl","controller","$scope","links","home","other","login","$http","questionData","hasLogin","title","hasCode","code","tags","download_link","graphData","content","question","vizJSAV","animate","showAnswer","toShow","jQuery","document","ready","$","prettyPrint"],"mappings":"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CPC,MAAS,IACTC,OAAU,MAEVN,MAAS,QACTI,IAAO,IACPC,MAAS,IACTC,OAAU,OAEVN,MAAS,QACTI,IAAO,IACPC,MAAS,IACTC,OAAU,MAEVN,MAAS,QACTI,IAAO,IACPC,MAAS,IACTC,OAAU,OAEVN,MAAS,QACTI,IAAO,IACPC,MAAS,IACTC,OAAU,MAEVN,MAAS,QACTI,IAAO,IACPC,MAAS,IACTC,OAAU,MAEVN,MAAS,QACTI,IAAO,IACPC,MAAS,IACTC,OAAU,MAEX9B,SACAC,KAAQ,IACRC,QAAW,OACXC,gBACAC,KAAQ,UACRC,MAAS,iJACTC,QAAW,EACX6B,aAAgB,IAChBC,WACCJ,MACC,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,IACA,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,IACA,IACA,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,IACA,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,IACA,IACA,KAEDR,MAAS,OACTnB,MAAS,MAET2B,MACC,KAEDR,MAAS,OACTnB,MAAS,UAKbiC,cACChD,WACAC,gBAAmB,4BACnBC,aAAgB,GAChBC,MACCC,UACCwC,SACAvC,WAEE,IACA,IACA,IACA,IACA,IACA,MAGA,IACA,IACA,IACA,IACA,IACA,MAGA,IACA,IACA,IACA,IACA,IACA,MAGA,IACA,IACA,IACA,IACA,IACA,MAGA,IACA,IACA,IACA,IACA,IACA,MAGA,IACA,IACA,IACA,IACA,IACA,MAGFK,SACAuC,cACAtC,KAAQ,IACRuC,MAAS,IACTC,MAAS,IACTvC,QAAW,OACXC,gBACAuC,aACAtC,KAAQ,eACRC,QAEE,KACA,KACA,KACA,KACA,KACA,OAGA,KACA,KACA,KACA,KACA,KACA,OAGA,KACA,KACA,KACA,KACA,KACA,OAGA,KACA,KACA,KACA,KACA,KACA,OAGA,KACA,IACA,KACA,KACA,KACA,OAGA,KACA,KACA,KACA,KACA,KACA,OAGFC,QAAW,MAIdqC,aACCrD,WACAC,gBAAmB,8DACnBC,aAAgB,EAChBC,MACCC,UACCC,UACCiD,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,KAENpD,SACAC,KAAQ,IACRC,QAAW,OACXC,gBACAC,KAAQ,cACRC,OACCuC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAK,KAEN9C,QAAW,MAId+C,aACC/D,WACAC,gBAAmB,kDACnBC,aAAgB,EAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,KAEDK,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAC,KAAQ,QACRC,OACC,KACA,KACA,KACA,MAEDC,QAAW,MAIdgD,aACChE,WACAC,gBAAmB,kDACnBC,aAAgB,EAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,KAEDK,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAQ,IAAO,KACPP,KAAQ,QACRC,OACC,KACA,KACA,KACA,MAEDC,QAAW,MAIdiD,aACCjE,WACAC,gBAAmB,kDACnBC,aAAgB,EAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,KAEDK,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAC,KAAQ,QACRC,OACC,KACA,KACA,KACA,MAEDC,QAAW,MAIdkD,aACClE,WACAC,gBAAmB,uDACnBC,aAAgB,EAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,KAED8D,KAAQ,KACRzD,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAC,KAAQ,aACRC,OACC,KACA,KACA,KACA,MAEDC,QAAW,MAIdoD,aACCpE,WACAC,gBAAmB,+GACnBC,aAAgB,EAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,IACA,KAEDa,UACC,IACA,IACA,IACA,IACA,KAEDR,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAQ,IAAO,IACPP,KAAQ,gBACRC,OACC,IACA,IACA,IACA,IACA,KAEDC,QAAW,MAIdqD,aACCrE,WACAC,gBAAmB,+GACnBC,aAAgB,EAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,IACA,KAEDa,UACC,IACA,IACA,IACA,IACA,KAEDR,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAQ,IAAO,IACPP,KAAQ,gBACRC,OACC,IACA,IACA,IACA,IACA,KAEDC,QAAW,MAIdsD,aACCtE,WACAC,gBAAmB,uEACnBC,aAAgB,GAChBC,MACCC,UACCC,UACC,IACA,IACA,IACA,IACA,KAEDa,UACC,SACA,SACA,SACA,SACA,UAEDR,SACAS,QAAW,QACXC,OAAU,IACVT,KAAQ,IACRC,QAAW,OACXC,gBACAQ,IAAO,SACPP,KAAQ,mBACRC,OACC,SACA,SACA,SACA,SACA,UAEDC,QAAW,MAMfuD,SAAQC,OAAO,wBAEdC,UAAU,UAAW,WACrB,OACCC,SAAU,IACVC,YAAa,WAEbC,YAAa,SAAU,SAASC,GAE/BA,EAAOC,OACNC,KAAM,aACNC,MAAO,aACPC,MAAO,oBAOVL,WAAW,gBAAiB,QAAS,SAAU,SAASM,EAAOL,GAO/DM,cACCC,UAAU,EACVC,MAAO,kDACPjG,KAAM,2sHACNkG,SAAS,EACTC,KAAM,0hBAeNrG,OAAQ,49BAWRsG,MAAO,SAAU,SACjBC,cAAe,oBAGhB,IAAIC,GAAY3G,SAASoG,aACzBA,cAAaQ,QAAUD,EAAgB,KACvCb,EAAOe,SAAWT,YAClB,IAAI3F,GAAQ,GAAIqG,SAAQ,KAAM/F,EAC9BN,GAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,GACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IACdtG,EAAMsG,QAAQ,IAEdjB,EAAOkB,YAAa,EACpBlB,EAAOmB,OAAS,WACfnB,EAAOkB,YAAclB,EAAOkB,kBAO/BE,OAAOC,UAAUC,MAAM,SAASC,GAC/BC","file":"graph-demo.min.js","sourcesContent":["(function() {\n\n\tvar graphDataSet = {\n\t\t\"statement_1\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = Dict.random(length=4, keyrange=['a','e','b','c','d'], valrange=range(1,20))\",\n\t\t\t\"current_line\": 1,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": {\n\t\t\t\t\t\t\"b\": \"3\",\n\t\t\t\t\t\t\"c\": \"3\",\n\t\t\t\t\t\t\"d\": \"3\",\n\t\t\t\t\t\t\"e\": \"3\"\n\t\t\t\t\t},\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"Dict\",\n\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\"b\": \"3\",\n\t\t\t\t\t\t\"c\": \"4\",\n\t\t\t\t\t\t\"d\": \"8\",\n\t\t\t\t\t\t\"e\": \"3\"\n\t\t\t\t\t},\n\t\t\t\t\t\"varFlag\": 1\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_10\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = MaxPriorityQueue.random(length=5) #length should be less than 26\",\n\t\t\t\"current_line\": 11,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"elements\": [\n\t\t\t\t\t\t\"'P:40'\",\n\t\t\t\t\t\t\"'J:32'\",\n\t\t\t\t\t\t\"'I:21'\",\n\t\t\t\t\t\t\"'X:28'\",\n\t\t\t\t\t\t\"'Y:19'\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"5\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"top\": \"'P:40'\",\n\t\t\t\t\t\"type\": \"MaxPriorityQueue\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"'P:40'\",\n\t\t\t\t\t\t\"'J:32'\",\n\t\t\t\t\t\t\"'I:21'\",\n\t\t\t\t\t\t\"'X:28'\",\n\t\t\t\t\t\t\"'Y:19'\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_11\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = Tree.random(size=10, valrange=range(100)) #valrange should be integer array with unique numbers\",\n\t\t\t\"current_line\": 13,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"childrenNo\": \"9\",\n\t\t\t\t\t\"eleFlags\": \"[0[0][0][0][0][0][0][0][0][0]]\",\n\t\t\t\t\t\"height\": \"2\",\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"size\": \"10\",\n\t\t\t\t\t\"type\": \"Tree\",\n\t\t\t\t\t\"value\": \"[42[25][76][31][85][82][26][28][99][32]]\",\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_12\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = BinarySearchTree.random(size=10, valrange=range(100)) #valrange should be integer array with unique numbers\",\n\t\t\t\"current_line\": 14,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"childrenNo\": \"2\",\n\t\t\t\t\t\"eleFlags\": \"[0[0][0[0[0[None][0]][None]][0[0[None][0]][0]]]]\",\n\t\t\t\t\t\"height\": \"5\",\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"left\": \"[11]\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"nodeFlag\": \"0\",\n\t\t\t\t\t\"parent\": \"None\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"right\": \"[83[77[40[None][42]][None]][91[86[None][88]][99]]]\",\n\t\t\t\t\t\"size\": \"10\",\n\t\t\t\t\t\"type\": \"BinarySearchTree\",\n\t\t\t\t\t\"value\": \"[31[11][83[77[40[None][42]][None]][91[86[None][88]][99]]]]\",\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_13\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = AVLTree.random(size=10, valrange=range(100)) #valrange should be integer array with unique numbers\",\n\t\t\t\"current_line\": 15,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"balanceFactor\": \"0\",\n\t\t\t\t\t\"childrenNo\": \"2\",\n\t\t\t\t\t\"eleFlags\": \"[0[0[0[0][None]][0]][0[0[0][None]][0[0][None]]]]\",\n\t\t\t\t\t\"height\": \"4\",\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"left\": \"[56[33[17][None]][66]]\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"nodeFlag\": \"0\",\n\t\t\t\t\t\"parent\": \"None\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"right\": \"[88[87[75][None]][97[91][None]]]\",\n\t\t\t\t\t\"size\": \"10\",\n\t\t\t\t\t\"type\": \"AVLTree\",\n\t\t\t\t\t\"value\": \"[69[56[33[17][None]][66]][88[87[75][None]][97[91][None]]]]\",\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_14\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = RBTree.random(size=10, valrange=range(100)) #valrange should be integer array with unique numbers\",\n\t\t\t\"current_line\": 16,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"childrenNo\": \"2\",\n\t\t\t\t\t\"color\": \"[B[R[B[R][R]][B[R][None]]][B[R][R]]]\",\n\t\t\t\t\t\"eleFlags\": \"[0[0[0[0][0]][0[0][None]]][0[0][0]]]\",\n\t\t\t\t\t\"height\": \"4\",\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"left\": \"[49[15[13][39]][66[53][None]]]\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"nodeColor\": \"B\",\n\t\t\t\t\t\"nodeFlag\": \"0\",\n\t\t\t\t\t\"parent\": \"None\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"right\": \"[95[91][98]]\",\n\t\t\t\t\t\"size\": \"10\",\n\t\t\t\t\t\"type\": \"RBTree\",\n\t\t\t\t\t\"value\": \"[82[49[15[13][39]][66[53][None]]][95[91][98]]]\",\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_15\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = Graph.random(vexNo=8, edgeNo=10) #vexNo should be less than 26\",\n\t\t\t\"current_line\": 18,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"E\": [{\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"T\",\n\t\t\t\t\t\t\"start\": \"J\",\n\t\t\t\t\t\t\"weight\": \"11\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"G\",\n\t\t\t\t\t\t\"start\": \"T\",\n\t\t\t\t\t\t\"weight\": \"2\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"G\",\n\t\t\t\t\t\t\"weight\": \"9\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"A\",\n\t\t\t\t\t\t\"start\": \"Y\",\n\t\t\t\t\t\t\"weight\": \"7\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"L\",\n\t\t\t\t\t\t\"start\": \"A\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"B\",\n\t\t\t\t\t\t\"start\": \"L\",\n\t\t\t\t\t\t\"weight\": \"14\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"B\",\n\t\t\t\t\t\t\"weight\": \"3\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"L\",\n\t\t\t\t\t\t\"weight\": \"15\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"L\",\n\t\t\t\t\t\t\"start\": \"G\",\n\t\t\t\t\t\t\"weight\": \"8\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"T\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"6\"\n\t\t\t\t\t}],\n\t\t\t\t\t\"V\": [{\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"T\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"J\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"J\",\n\t\t\t\t\t\t\t\"G\",\n\t\t\t\t\t\t\t\"M\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"T\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"T\",\n\t\t\t\t\t\t\t\"Y\",\n\t\t\t\t\t\t\t\"L\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"G\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"G\",\n\t\t\t\t\t\t\t\"A\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"Y\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"Y\",\n\t\t\t\t\t\t\t\"L\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"A\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"A\",\n\t\t\t\t\t\t\t\"B\",\n\t\t\t\t\t\t\t\"M\",\n\t\t\t\t\t\t\t\"G\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"L\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"L\",\n\t\t\t\t\t\t\t\"M\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"B\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"B\",\n\t\t\t\t\t\t\t\"L\",\n\t\t\t\t\t\t\t\"T\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"M\"\n\t\t\t\t\t}],\n\t\t\t\t\t\"edge_count\": \"10\",\n\t\t\t\t\t\"edges\": [{\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"T\",\n\t\t\t\t\t\t\"start\": \"J\",\n\t\t\t\t\t\t\"weight\": \"11\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"G\",\n\t\t\t\t\t\t\"start\": \"T\",\n\t\t\t\t\t\t\"weight\": \"2\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"G\",\n\t\t\t\t\t\t\"weight\": \"9\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"A\",\n\t\t\t\t\t\t\"start\": \"Y\",\n\t\t\t\t\t\t\"weight\": \"7\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"L\",\n\t\t\t\t\t\t\"start\": \"A\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"B\",\n\t\t\t\t\t\t\"start\": \"L\",\n\t\t\t\t\t\t\"weight\": \"14\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"B\",\n\t\t\t\t\t\t\"weight\": \"3\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"L\",\n\t\t\t\t\t\t\"weight\": \"15\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"L\",\n\t\t\t\t\t\t\"start\": \"G\",\n\t\t\t\t\t\t\"weight\": \"8\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"T\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"6\"\n\t\t\t\t\t}],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"Graph\",\n\t\t\t\t\t\"value\": \"[['J', ['T']], ['T', ['J', 'G', 'M']], ['G', ['T', 'Y', 'L']], ['Y', ['G', 'A']], ['A', ['Y', 'L']], ['L', ['A', 'B', 'M', 'G']], ['B', ['L', 'M']], ['M', ['B', 'L', 'T']]]\",\n\t\t\t\t\t\"varFlag\": 2,\n\t\t\t\t\t\"vertex_count\": \"8\",\n\t\t\t\t\t\"vertices\": [{\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"T\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"J\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"J\",\n\t\t\t\t\t\t\t\"G\",\n\t\t\t\t\t\t\t\"M\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"T\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"T\",\n\t\t\t\t\t\t\t\"Y\",\n\t\t\t\t\t\t\t\"L\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"G\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"G\",\n\t\t\t\t\t\t\t\"A\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"Y\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"Y\",\n\t\t\t\t\t\t\t\"L\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"A\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"A\",\n\t\t\t\t\t\t\t\"B\",\n\t\t\t\t\t\t\t\"M\",\n\t\t\t\t\t\t\t\"G\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"L\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"L\",\n\t\t\t\t\t\t\t\"M\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"B\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"B\",\n\t\t\t\t\t\t\t\"L\",\n\t\t\t\t\t\t\t\"T\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"M\"\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_16\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = DiGraph.random(vexNo=8, edgeNo=14) #vexNo should be less than 26\",\n\t\t\t\"current_line\": 19,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"E\": [{\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"K\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"N\",\n\t\t\t\t\t\t\"start\": \"Y\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"B\",\n\t\t\t\t\t\t\"start\": \"N\",\n\t\t\t\t\t\t\"weight\": \"9\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"H\",\n\t\t\t\t\t\t\"start\": \"B\",\n\t\t\t\t\t\t\"weight\": \"5\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"C\",\n\t\t\t\t\t\t\"start\": \"H\",\n\t\t\t\t\t\t\"weight\": \"12\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"C\",\n\t\t\t\t\t\t\"weight\": \"13\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"I\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"6\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"H\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"4\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"H\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"I\",\n\t\t\t\t\t\t\"start\": \"B\",\n\t\t\t\t\t\t\"weight\": \"7\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"H\",\n\t\t\t\t\t\t\"weight\": \"14\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"5\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"K\",\n\t\t\t\t\t\t\"start\": \"C\",\n\t\t\t\t\t\t\"weight\": \"8\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"C\",\n\t\t\t\t\t\t\"start\": \"I\",\n\t\t\t\t\t\t\"weight\": \"5\"\n\t\t\t\t\t}],\n\t\t\t\t\t\"V\": [{\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"Y\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"K\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"N\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"Y\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"B\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"N\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"H\",\n\t\t\t\t\t\t\t\"I\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"B\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"C\",\n\t\t\t\t\t\t\t\"Y\",\n\t\t\t\t\t\t\t\"M\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"H\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"M\",\n\t\t\t\t\t\t\t\"K\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"C\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"I\",\n\t\t\t\t\t\t\t\"H\",\n\t\t\t\t\t\t\t\"Y\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"M\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"C\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"I\"\n\t\t\t\t\t}],\n\t\t\t\t\t\"edge_count\": \"14\",\n\t\t\t\t\t\"edges\": [{\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"K\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"N\",\n\t\t\t\t\t\t\"start\": \"Y\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"B\",\n\t\t\t\t\t\t\"start\": \"N\",\n\t\t\t\t\t\t\"weight\": \"9\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"H\",\n\t\t\t\t\t\t\"start\": \"B\",\n\t\t\t\t\t\t\"weight\": \"5\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"C\",\n\t\t\t\t\t\t\"start\": \"H\",\n\t\t\t\t\t\t\"weight\": \"12\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"C\",\n\t\t\t\t\t\t\"weight\": \"13\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"I\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"6\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"H\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"4\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"H\",\n\t\t\t\t\t\t\"weight\": \"10\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"I\",\n\t\t\t\t\t\t\"start\": \"B\",\n\t\t\t\t\t\t\"weight\": \"7\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"M\",\n\t\t\t\t\t\t\"start\": \"H\",\n\t\t\t\t\t\t\"weight\": \"14\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"Y\",\n\t\t\t\t\t\t\"start\": \"M\",\n\t\t\t\t\t\t\"weight\": \"5\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"K\",\n\t\t\t\t\t\t\"start\": \"C\",\n\t\t\t\t\t\t\"weight\": \"8\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"color\": \"black\",\n\t\t\t\t\t\t\"end\": \"C\",\n\t\t\t\t\t\t\"start\": \"I\",\n\t\t\t\t\t\t\"weight\": \"5\"\n\t\t\t\t\t}],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"DiGraph\",\n\t\t\t\t\t\"value\": \"[['K', ['Y']], ['Y', ['N']], ['N', ['B']], ['B', ['H', 'I']], ['H', ['C', 'Y', 'M']], ['C', ['M', 'K']], ['M', ['I', 'H', 'Y']], ['I', ['C']]]\",\n\t\t\t\t\t\"varFlag\": 2,\n\t\t\t\t\t\"vertex_count\": \"8\",\n\t\t\t\t\t\"vertices\": [{\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"Y\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"K\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"N\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"Y\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"B\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"N\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"H\",\n\t\t\t\t\t\t\t\"I\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"B\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"C\",\n\t\t\t\t\t\t\t\"Y\",\n\t\t\t\t\t\t\t\"M\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"H\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"M\",\n\t\t\t\t\t\t\t\"K\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"C\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"I\",\n\t\t\t\t\t\t\t\"H\",\n\t\t\t\t\t\t\t\"Y\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"M\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"adjs\": [\n\t\t\t\t\t\t\t\"C\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"color\": \"gray\",\n\t\t\t\t\t\t\"value\": \"I\"\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_17\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = StringMatrix.random()\",\n\t\t\t\"current_line\": 21,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"edges\": [],\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\t\"0\"\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"leftheader\": [],\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"ncols\": \"6\",\n\t\t\t\t\t\"nrows\": \"6\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"topheader\": [],\n\t\t\t\t\t\"type\": \"StringMatrix\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"27\",\n\t\t\t\t\t\t\t\"19\",\n\t\t\t\t\t\t\t\"35\",\n\t\t\t\t\t\t\t\"95\",\n\t\t\t\t\t\t\t\"20\",\n\t\t\t\t\t\t\t\"23\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"93\",\n\t\t\t\t\t\t\t\"21\",\n\t\t\t\t\t\t\t\"25\",\n\t\t\t\t\t\t\t\"70\",\n\t\t\t\t\t\t\t\"12\",\n\t\t\t\t\t\t\t\"10\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"63\",\n\t\t\t\t\t\t\t\"53\",\n\t\t\t\t\t\t\t\"60\",\n\t\t\t\t\t\t\t\"46\",\n\t\t\t\t\t\t\t\"27\",\n\t\t\t\t\t\t\t\"80\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"46\",\n\t\t\t\t\t\t\t\"48\",\n\t\t\t\t\t\t\t\"19\",\n\t\t\t\t\t\t\t\"86\",\n\t\t\t\t\t\t\t\"34\",\n\t\t\t\t\t\t\t\"85\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"10\",\n\t\t\t\t\t\t\t\"1\",\n\t\t\t\t\t\t\t\"12\",\n\t\t\t\t\t\t\t\"25\",\n\t\t\t\t\t\t\t\"23\",\n\t\t\t\t\t\t\t\"63\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"82\",\n\t\t\t\t\t\t\t\"59\",\n\t\t\t\t\t\t\t\"37\",\n\t\t\t\t\t\t\t\"94\",\n\t\t\t\t\t\t\t\"51\",\n\t\t\t\t\t\t\t\"55\"\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_2\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = DisjointSet.random(size=9) #size should be less than 26\",\n\t\t\t\"current_line\": 2,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": {\n\t\t\t\t\t\t\"A\": \"2\",\n\t\t\t\t\t\t\"G\": \"2\",\n\t\t\t\t\t\t\"K\": \"1\",\n\t\t\t\t\t\t\"M\": \"2\",\n\t\t\t\t\t\t\"O\": \"1\",\n\t\t\t\t\t\t\"P\": \"2\",\n\t\t\t\t\t\t\"Q\": \"2\",\n\t\t\t\t\t\t\"U\": \"2\",\n\t\t\t\t\t\t\"W\": \"2\"\n\t\t\t\t\t},\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"DisjointSet\",\n\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\"A\": \"O\",\n\t\t\t\t\t\t\"G\": \"O\",\n\t\t\t\t\t\t\"K\": \"K\",\n\t\t\t\t\t\t\"M\": \"O\",\n\t\t\t\t\t\t\"O\": \"O\",\n\t\t\t\t\t\t\"P\": \"K\",\n\t\t\t\t\t\t\"Q\": \"O\",\n\t\t\t\t\t\t\"U\": \"K\",\n\t\t\t\t\t\t\"W\": \"K\"\n\t\t\t\t\t},\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_3\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = Array.random(length=4, valrange=range(100))\",\n\t\t\t\"current_line\": 4,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"4\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"Array\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"47\",\n\t\t\t\t\t\t\"89\",\n\t\t\t\t\t\t\"16\",\n\t\t\t\t\t\t\"83\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_4\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = Stack.random(length=4, valrange=range(100))\",\n\t\t\t\"current_line\": 5,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"4\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"top\": \"34\",\n\t\t\t\t\t\"type\": \"Stack\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"15\",\n\t\t\t\t\t\t\"46\",\n\t\t\t\t\t\t\"58\",\n\t\t\t\t\t\t\"34\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_5\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = Queue.random(length=4, valrange=range(100))\",\n\t\t\t\"current_line\": 6,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"4\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"Queue\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"91\",\n\t\t\t\t\t\t\"12\",\n\t\t\t\t\t\t\"81\",\n\t\t\t\t\t\t\"56\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_6\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = LinkedList.random(length=4, valrange=range(100))\",\n\t\t\t\"current_line\": 7,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"1\",\n\t\t\t\t\t\t\"1\",\n\t\t\t\t\t\t\"1\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"head\": \"37\",\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"4\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"type\": \"LinkedList\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"37\",\n\t\t\t\t\t\t\"72\",\n\t\t\t\t\t\t\"91\",\n\t\t\t\t\t\t\"17\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_7\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = BinaryMinHeap.random(length=5, valrange=range(10)) #valrange should be integer array with unique numbers\",\n\t\t\t\"current_line\": 8,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"elements\": [\n\t\t\t\t\t\t\"1\",\n\t\t\t\t\t\t\"3\",\n\t\t\t\t\t\t\"2\",\n\t\t\t\t\t\t\"9\",\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"5\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"top\": \"1\",\n\t\t\t\t\t\"type\": \"BinaryMinHeap\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"1\",\n\t\t\t\t\t\t\"3\",\n\t\t\t\t\t\t\"2\",\n\t\t\t\t\t\t\"9\",\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_8\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = BinaryMaxHeap.random(length=5, valrange=range(10)) #valrange should be integer array with unique numbers\",\n\t\t\t\"current_line\": 9,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"elements\": [\n\t\t\t\t\t\t\"7\",\n\t\t\t\t\t\t\"5\",\n\t\t\t\t\t\t\"6\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"4\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"5\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"top\": \"7\",\n\t\t\t\t\t\"type\": \"BinaryMaxHeap\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"7\",\n\t\t\t\t\t\t\"5\",\n\t\t\t\t\t\t\"6\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"4\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t\"statement_9\": {\n\t\t\t\"console\": [],\n\t\t\t\"current_content\": \"x = MinPriorityQueue.random(length=5) #length should be less than 26\",\n\t\t\t\"current_line\": 10,\n\t\t\t\"vars\": {\n\t\t\t\t\"depth_1\": [{\n\t\t\t\t\t\"eleFlags\": [\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\",\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"elements\": [\n\t\t\t\t\t\t\"'Z:13'\",\n\t\t\t\t\t\t\"'B:32'\",\n\t\t\t\t\t\t\"'I:49'\",\n\t\t\t\t\t\t\"'J:41'\",\n\t\t\t\t\t\t\"'O:40'\"\n\t\t\t\t\t],\n\t\t\t\t\t\"index\": [],\n\t\t\t\t\t\"isEmpty\": \"False\",\n\t\t\t\t\t\"length\": \"5\",\n\t\t\t\t\t\"name\": \"x\",\n\t\t\t\t\t\"pointer\": \"None\",\n\t\t\t\t\t\"pointerIndex\": [],\n\t\t\t\t\t\"top\": \"'Z:13'\",\n\t\t\t\t\t\"type\": \"MinPriorityQueue\",\n\t\t\t\t\t\"value\": [\n\t\t\t\t\t\t\"'Z:13'\",\n\t\t\t\t\t\t\"'B:32'\",\n\t\t\t\t\t\t\"'I:49'\",\n\t\t\t\t\t\t\"'J:41'\",\n\t\t\t\t\t\t\"'O:40'\"\n\t\t\t\t\t],\n\t\t\t\t\t\"varFlag\": 2\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t}\n\n\tangular.module('platform-question', [])\n\n\t.directive('navBar', [function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: \"nav.html\",\n\t\t\t// controlerAs:\"nav\", \n\t\t\tcontroller: ['$scope', function($scope) {\n\t\t\t\t//pass links throught json\n\t\t\t\t$scope.links = {\n\t\t\t\t\thome: \"index.html\",\n\t\t\t\t\tother: \"other.html\",\n\t\t\t\t\tlogin: \"login.html\",\n\t\t\t\t}\n\t\t\t}],\n\t\t};\n\t}])\n\n\n\t.controller('QuestionCtrl', ['$http', '$scope', function($http, $scope) {\n\t\t// get initial question data\n\t\t// $scope.question={};\n\t\t// $http.get('/question.json').success(function(data) {\n\t\t// \t$scope.question=data; //data to be a list of questions\n\t\t// \t$scope.$apply();\n\t\t// })\n\t\tquestionData = {\n\t\t\thasLogin: true,\n\t\t\ttitle: \"Nest Thermostat temperature not getting updated\",\n\t\t\tBODY: \"What is the result of dequeue for <graph>\\\"[123, 10, 32, 32, 32, 32, 34, 115, 116, 97, 116, 101, 109, 101, 110, 116, 95, 49, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 111, 110, 115, 111, 108, 101, 34, 58, 32, 91, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 117, 114, 114, 101, 110, 116, 95, 99, 111, 110, 116, 101, 110, 116, 34, 58, 32, 34, 120, 32, 61, 32, 81, 117, 101, 117, 101, 46, 114, 97, 110, 100, 111, 109, 40, 108, 101, 110, 103, 116, 104, 61, 52, 44, 32, 118, 97, 108, 114, 97, 110, 103, 101, 61, 114, 97, 110, 103, 101, 40, 49, 48, 48, 41, 41, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 117, 114, 114, 101, 110, 116, 95, 108, 105, 110, 101, 34, 58, 32, 49, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 118, 97, 114, 115, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 112, 116, 104, 95, 49, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 101, 108, 101, 70, 108, 97, 103, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 48, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 105, 110, 100, 101, 120, 34, 58, 32, 91, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 105, 115, 69, 109, 112, 116, 121, 34, 58, 32, 34, 70, 97, 108, 115, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 108, 101, 110, 103, 116, 104, 34, 58, 32, 34, 52, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 120, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 111, 105, 110, 116, 101, 114, 34, 58, 32, 34, 78, 111, 110, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 111, 105, 110, 116, 101, 114, 73, 110, 100, 101, 120, 34, 58, 32, 91, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 121, 112, 101, 34, 58, 32, 34, 65, 114, 114, 97, 121, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 118, 97, 108, 117, 101, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 52, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 52, 56, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 52, 56, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 53, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 118, 97, 114, 70, 108, 97, 103, 34, 58, 32, 49, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 125, 10, 125, 10]\\\"</graph>?\",\n\t\t\thasCode: true,\n\t\t\tcode: \"from django.db import models \\n \\\n\t\t\t\t\t\tclass Poll(models.Model): question = models.CharField(max_length = 200) \\n \\\n\t\t\t\t\t\tpub_date = models.DateTimeField('date published') \\n \\\n\t\t\t\t\t\tclass Choice(models.Model): poll = models.ForeignKey(Poll) \\n \\\n\t\t\t\t\t\tchoice_text = models.CharField(max_length = 200) \\n \\\n\t\t\t\t\t\tvotes = models.IntegerField( \\n \\\n\t\t\t\t\t\t\tdefault = 0) \\n \\\n\t\t\t\t\t\t# ndsaklsdhaslk \\n \\\n\t\t\t\t\t\tclass FreshJuice { \\n \\\n\t\t\t\t\t\t\tenum FreshJuiceSize { \\n \\\n\t\t\t\t\t\t\t\tSIZE, MEDIUM, LARGE \\n \\\n\t\t\t\t\t\t\t} \\n \\\n\t\t\t\t\t\t\tFreshJuiceSize size; \\n \\\n\t\t\t\t\t\t} \\n \\\n\t\t\t\t\t}\",\n\t\t\tANSWER: \"The day-to-day working JSAV repository is located at GitHub. For new developers who want to use the Github working version of JSAV: \\n \\\n\t\t\t\t\tInstall Git\\n\\\n\t\t\t\t\tCheck out the JSAV repository.For example, at the commandline you can do the following to create a new JSAV folder or directory: git clone git: //github.com/vkaravir/JSAV.git JSAV (Note that this is a read-only URL. If you are joining the developer team, and you are not sufficiently familiar with Git to know what to do to set things up right to be able to push changes, talk to us about it.)\\n \\\n\t\t\t\t\t\t\tGo to the JSAV folder or directory that you just created and run: make This will \\\"compile\\\"\\\n\t\t\t\t\t\tthe\\n \\\n\t\t\t\t\t\tpieces together\\n \\\n\t\t\t\t\tfor you.At this point, you are ready to\\n \\\n\t\t\t\t\ttry out the examples or invoke your copy of JSAV in your own development projects.\\n \\\n\t\t\t\t\tFor SVN users new to git: \\n \\\n\t\t\t\t\t\tTo \\\"checkout\\\" a new copy of the library, use \\\"git clone\\\".\\n \\\n\t\t\t\t\tTo \\\"update\\\" your copy of the repository, use \\\"git pull\\\".\",\n\t\t\ttags: [\"Python\", \"Array\"],\n\t\t\tdownload_link: \"http://google.com\",\n\t\t};\n\n\t\tvar graphData = reformat(questionData);\n\t\tquestionData.content = graphData[\"BODY\"];\n\t\t$scope.question = questionData;\n\t\tvar graph = new vizJSAV(\"av\", graphDataSet);\n\t\tgraph.animate(1);\n\t\tgraph.animate(2);\n\t\tgraph.animate(3);\n\t\tgraph.animate(4);\n\t\tgraph.animate(5);\n\t\tgraph.animate(6);\n\t\tgraph.animate(7);\n\t\tgraph.animate(8);\n\t\tgraph.animate(9);\n\t\tgraph.animate(10);\n\t\tgraph.animate(11);\n\t\tgraph.animate(12);\n\t\tgraph.animate(13);\n\t\tgraph.animate(14);\n\t\tgraph.animate(15);\n\t\tgraph.animate(16);\n\t\tgraph.animate(17);\n\n\t\t$scope.showAnswer = false;\n\t\t$scope.toShow = function() {\n\t\t\t$scope.showAnswer = !$scope.showAnswer;\n\t\t}\n\n\t}]);\n\n})()\n\njQuery(document).ready(function($) {\n\tprettyPrint();\n});\n\nfunction bin2String(array) {\n\treturn String.fromCharCode.apply(String, array);\n}\n\nfunction reformat(data) {\n\tvar res = {};\n\tres.ANSWER = data.ANSWER;\n\tvar body = data.BODY;\n\n\tvar startIndex = body.indexOf(\"<graph>\");\n\n\tvar endIndex = body.indexOf(\"</graph>\");\n\n\tif ((startIndex > -1) && (endIndex > -1)) {\n\t\tvar graph = JSON.parse(body.substring(startIndex + 8, endIndex - 1));\n\t\tvar new_body = body.substring(0, startIndex) + body.substring(endIndex + 8);\n\n\t\tres.GRAPH = JSON.parse(bin2String(graph));\n\t\tres.BODY = new_body;\n\t}\n\n\treturn res;\n}"],"sourceRoot":"/source/"}