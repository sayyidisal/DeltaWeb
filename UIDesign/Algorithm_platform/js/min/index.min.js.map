{"version":3,"sources":["index.js"],"names":["userInfo","success","loginAs","username","errors","errorName","errorEmail","errorAuthen","angular","module","directive","restrict","templateUrl","controller","$scope","links","home","other","login","$rootScope","info","$http","formData","role","submitForm","usename","document","getElementById","value","password","email","method","url","data","$","param","headers","Content-Type","modal","jQuery","ready","tooltip","height","window"],"mappings":"CAAA,WAECA,UACCC,SAAQ,EACRC,QAAS,EACTC,SAAU,GACVC,QACCC,WAAW,EACXC,YAAY,EACZC,aAAa,IAUfC,QAAQC,OAAO,qBAEdC,UAAU,UAAW,WACrB,OACCC,SAAU,IACVC,YAAa,WAEbC,YAAa,SAAU,SAASC,GAE/BA,EAAOC,OACNC,KAAM,aACNC,MAAO,aACPC,MAAO,oBAMVL,WAAW,YAAa,SAAU,aAAc,SAASC,EAAQK,GACjEA,EAAWC,KAAOpB,YAGlBa,WAAW,cAAe,QAAS,SAAU,aAAc,SAASQ,EAAOP,EAAQK,GACnFL,EAAOQ,YACPR,EAAOS,KAAO,EACdT,EAAOT,WAAY,EACnBS,EAAOR,YAAa,EAEpBQ,EAAOU,WAAa,WACnBV,EAAOQ,UACNC,KAAMT,EAAOS,KACbE,QAASC,SAASC,eAAe,cAAcC,MAC/CC,SAAUH,SAASC,eAAe,cAAcC,MAChDE,MAAOJ,SAASC,eAAe,WAAWC,OAE3CP,GACEU,OAAQ,OACRC,IAAK,gBACLC,KAAMC,EAAEC,MAAMrB,EAAOQ,UACrBc,SACCC,eAAgB,uCAGjBpC,QAAQ,SAASgC,GAEZA,EAAKhC,SAQTkB,EAAWC,KAAOa,EAClBC,EAAE,gBAAgBI,MAAM,UAPxBxB,EAAOT,UAAY4B,EAAK7B,OAAOC,UAC/BS,EAAOR,WAAa2B,EAAK7B,OAAOE,kBAcpCO,WAAW,aAAc,QAAS,SAAU,aAAc,SAASQ,EAAOP,EAAQK,GAElFL,EAAOQ,YACPR,EAAOP,aAAc,EAErBO,EAAOU,WAAa,WACnBV,EAAOQ,UACNG,QAASC,SAASC,eAAe,cAAcC,MAC/CC,SAAUH,SAASC,eAAe,cAAcC,OAEjDP,GACEU,OAAQ,OACRC,IAAK,eACLC,KAAMC,EAAEC,MAAMrB,EAAOQ,UACrBc,SACCC,eAAgB,uCAGjBpC,QAAQ,SAASgC,GAEZA,EAAKhC,SAMTkB,EAAWC,KAAOa,EAClBC,EAAE,eAAeI,MAAM,SALvBxB,EAAOP,YAAc0B,EAAK7B,OAAOG,qBAevCgC,OAAOb,UAAUc,MAAM,SAASN,GAC/BA,EAAE,2BAA2BO,UAC7BP,EAAE,eAAeQ,OAAOR,EAAES,QAAQD","file":"index.min.js","sourcesContent":["(function() {\n\n\tuserInfo = {\n\t\tsuccess:true,\n\t\tloginAs: 0, //0 as not login, 1 as student, 2 as instructor\n\t\tusername: \"\",\n\t\terrors: {\n\t\t\terrorName: true,\n\t\t\terrorEmail: true,\n\t\t\terrorAuthen: true,\n\t\t}\n\t};\n\n\t// $http.get('/user.json').success(function(data) {\n\t// \t// pointer changes, can't use this anymore. thus use store to refer to the previous pointer\n\t// \tstore.user = data;\n\t// \t// rest things to do\n\t// })\n\n\tangular.module('platform-index', [])\n\n\t.directive('navBar', [function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: \"nav.html\",\n\t\t\t// controlerAs:\"nav\", \n\t\t\tcontroller: ['$scope', function($scope) {\n\t\t\t\t//pass links throught json\n\t\t\t\t$scope.links = {\n\t\t\t\t\thome: \"index.html\",\n\t\t\t\t\tother: \"other.html\",\n\t\t\t\t\tlogin: \"login.html\",\n\t\t\t\t}\n\t\t\t}],\n\t\t};\n\t}])\n\n\t.controller('FuncCtrl', ['$scope', '$rootScope', function($scope, $rootScope) {\n\t\t$rootScope.info = userInfo;\n\t}])\n\n\t.controller('SignupCtrl', ['$http', '$scope', '$rootScope', function($http, $scope, $rootScope) {\n\t\t$scope.formData = {};\n\t\t$scope.role = 1;\n\t\t$scope.errorName = false;\n\t\t$scope.errorEmail = false;\n\n\t\t$scope.submitForm = function() {\n\t\t\t$scope.formData = {\n\t\t\t\trole: $scope.role,\n\t\t\t\tusename: document.getElementById('s-username').value,\n\t\t\t\tpassword: document.getElementById('s-password').value,\n\t\t\t\temail: document.getElementById('s-email').value,\n\t\t\t};\n\t\t\t$http({\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: 'signupProcess', // to be changed\n\t\t\t\t\tdata: $.param($scope.formData), // pass in data as strings\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t} // set the headers so angular passing info as form data (not request payload)\n\t\t\t\t})\n\t\t\t\t.success(function(data) {\n\n\t\t\t\t\tif (!data.success) {\n\t\t\t\t\t\t// if not successful, bind errors to error variables\n\t\t\t\t\t\t$scope.errorName = data.errors.errorName; //true if user has been taken\n\t\t\t\t\t\t$scope.errorEmail = data.errors.errorEmail; //true if email has been registered\n\t\t\t\t\t\t// pass true, error message will show accordingly\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$rootScope.info = data;\n\t\t\t\t\t\t$('#signupModal').modal('hide');\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\n\t}])\n\n\t.controller('LoginCtrl', ['$http', '$scope', '$rootScope', function($http, $scope, $rootScope) {\n\n\t\t$scope.formData = {};\n\t\t$scope.errorAuthen = false;\n\n\t\t$scope.submitForm = function() {\n\t\t\t$scope.formData = {\n\t\t\t\tusename: document.getElementById('l-username').value,\n\t\t\t\tpassword: document.getElementById('l-password').value,\n\t\t\t};\n\t\t\t$http({\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: 'LoginProcess', // to be changed\n\t\t\t\t\tdata: $.param($scope.formData), // pass in data as strings\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t} // set the headers so angular passing info as form data (not request payload)\n\t\t\t\t})\n\t\t\t\t.success(function(data) {\n\n\t\t\t\t\tif (!data.success) {\n\t\t\t\t\t\t// if not successful, bind errors to error variables\n\t\t\t\t\t\t$scope.errorAuthen = data.errors.errorAuthen; //true not match\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if success, update user data and apply\n\t\t\t\t\t\t$rootScope.info = data;\n\t\t\t\t\t\t$('#loginModal').modal('hide');\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t};\n\n\t}]);\n\n})()\n\njQuery(document).ready(function($) {\n\t$('[data-toggle=\"tooltip\"]').tooltip();\n\t$('#index-wrap').height($(window).height());\n\n});"],"sourceRoot":"/source/"}